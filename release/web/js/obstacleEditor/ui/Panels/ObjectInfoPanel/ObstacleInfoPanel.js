function ObstacleInfoPanelScript(t){function e(t){this._user.getSelectedObstacle().setName(t.text)}function n(t,e){this.addRoutePoint(e)}function i(t,e){this.removeRoutePoint(e)}function s(t,e){e===this._user.getSelectedObstacle()&&this.setObstacleBaseInfo(e)}function o(t,e){this._user.getSelectedRoutePoint()==t?this._mainPanel.mapPanel.putRoutePointToMapCenter(t):this._user.selectRoutePoint(t)}function a(t,e){t.getOwner().removeRoutePoint(t)}this.changeRoutePoint=function(t,e){this.updateRoutePointItem(e),this.updateRoutePointItem(t)},this.updateRoutePointItem=function(t){null!=t&&this.routePointList.changeItem(t.index,{routePoint:t})},this.refreshPanel=function(){var t=this._user.isObstacleSelected();this.visible=t},this.setObstacleInfo=function(t){null!=t&&(this.setObstacleBaseInfo(t),this.setRoutePoints(t.route))},this.setObstacleBaseInfo=function(t){this.typeComboBox.selectedLabel=t.type,this.nameInput.text=t.name},this.changeObstacle=function(t,e){null!=e&&(e.unregisterEvent(ObstacleEvent.ROUTE_POINT_ADDED,this,n),e.unregisterEvent(ObstacleEvent.ROUTE_POINT_REMOVED,this,i),e.unregisterEvent(ObjectEvent.VALUE_CHANGED,this,s)),null!=t&&(t.registerEvent(ObstacleEvent.ROUTE_POINT_ADDED,this,n),t.registerEvent(ObstacleEvent.ROUTE_POINT_REMOVED,this,i),t.registerEvent(ObjectEvent.VALUE_CHANGED,this,s)),this.setObstacleInfo(t),this.refreshPanel()},this.refreshRoutePointList=function(){this.routePointList.refresh()},this.setRoutePoints=function(t){this.routePointList.array=[];for(var e=0;e<t.points.length;e++)this.addRoutePoint(t.points[e],e,!1);this.refreshRoutePointList()},this.addRoutePoint=function(t,e=!0){var n=t.index;e?this.routePointList.addItemAt({routePoint:t},n):this.routePointList.array.splice(n,0,{routePoint:t})},this.removeRoutePoint=function(t){this.routePointList.deleteItem(t.index)},ObstacleInfoPanelScript.super(this),DependencesHelper.setDependences(this,t),this._loadedDataManager.registerEvent(LoadedDataManagerEvent.MAP_DATA_LOADED,this,function(){UIHelper.setComboLabels(this.typeComboBox,this._loadedDataManager.mapData.getObstacleTypes())}),this.routePointList.renderHandler=new Handler(this,function(t,e){t.label="point"+e;var n=t.dataSource.routePoint,i=n===this._user.getSelectedRoutePoint(),s=t.getChildByName("selectedMark");null!=s&&(s.visible=i),t.on(Event.CLICK,this,o,[n]),t.on(Event.RIGHT_CLICK,this,a,[n])}),this.addRoutePointButton.on(Event.CLICK,this,function(t){var e=this._user.getSelectedObstacle(),n=null;if(0==e.getRoutePointCount()){var i=new Pose,s=this._loadedDataManager.mapData.uiToMapPosition(this._mainPanel.mapPanel.getViewCenter());i.vec3.x=s.x,i.vec3.y=s.y,n=e.createRoutePoint(this._loadedDataManager.mapData,i),e.addRoutePoint(n)}else{var o=this._user.getSelectedRoutePoint();if(null==o)n=e.getRoutePoint(e.getRoutePointCount()-1).clone(),e.addRoutePoint(n);else{var a=o.index;n=o.clone(),e.addRoutePoint(n,a+1)}}this._user.selectRoutePoint(n)}),this.typeComboBox.on(Event.CHANGE,this,function(t){var e=t.currentTarget;this._user.getSelectedObstacle().setType(e.selectedLabel)}),this.nameInput.on(Event.ENTER,this,e),this.nameInput.on(Event.BLUR,this,e),this._user.registerEvent(UserEvent.SCENE_OBJECT_SELECTED,this,function(t,e,n){this.changeObstacle(ObjectHelper.objectCheck(e,"sceneObjectType",SceneObjectType.OBSTACLE),ObjectHelper.objectCheck(n,"sceneObjectType",SceneObjectType.OBSTACLE))}),this._user.registerEvent(UserEvent.ROUTE_POINT_SELECTED,this,function(t,e,n){this.changeRoutePoint(ObjectHelper.objectCheck(e,"pointType",ObjectPointType.OBSTACLE_ROUTE_POINT),ObjectHelper.objectCheck(n,"pointType",ObjectPointType.OBSTACLE_ROUTE_POINT))}),this.changeObstacle(this._user.getSelectedObstacle(),null)}Laya.class(ObstacleInfoPanelScript,"ObstacleInfoPanelScript",ObstacleInfoPanelUI);