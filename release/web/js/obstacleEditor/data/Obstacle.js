var ObstacleEvent={ROUTE_POINT_ADDED:"route point added",ROUTE_POINT_REMOVED:"route point removed"};class Obstacle extends EventObject{constructor(t,e){super(),this.type=t,this.name=e,this.route=new Route}setName(t){this.setValue("name",t)}setType(t){this.setValue("type",t)}getRoutePoint(t){return this.route.points[t]}getRoutePoints(){return this.route.points}getRoutePointCount(){return this.route.points.length}addRoutePoint(t,e=-1){-1==e?(this.route.points.push(t),e=this.route.points.length-1):this.route.points.splice(e,0,t),t.obstacle=this,t.index=e;for(var s=e+1;s<this.route.points.length;s++)this.route.points[s].index=s;this.sendEvent(ObstacleEvent.ROUTE_POINT_ADDED,t);for(s=e+1;s<this.route.points.length;s++)this.route.points[s].sendEvent(ObjectEvent.VALUE_CHANGED,new Set(["index"]));t._refreshLinkLine(),e>0&&this.route.points[e-1]._refreshLinkLine(),t._refreshTimeOrSpeed()}removeRoutePoint(t){var e=t.index;this.route.points.splice(e,1);for(var s=e;s<this.route.points.length;s++)this.route.points[s].index=s;t.clearEvent(),this.sendEvent(ObstacleEvent.ROUTE_POINT_REMOVED,t);for(s=e;s<this.route.points.length;s++)this.route.points[s].sendEvent(ObjectEvent.VALUE_CHANGED,new Set(["index"]));e>0&&this.route.points[e-1]._refreshLinkLine(),e<this.route.points.length&&this.route.points[e]._refreshTimeOrSpeed()}toJson(){var t=[];for(var e of this.route.points)t.push(e.toJson());return{moveStates:t,type:this.type,name:this.name}}}