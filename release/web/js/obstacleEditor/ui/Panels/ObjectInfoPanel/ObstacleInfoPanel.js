function ObstacleInfoPanelScript(e){function t(e){this._user.getSelectedObstacle().setName(e.text)}function n(e,t){this.addRoutePoint(t)}function i(e,t){this.removeRoutePoint(t)}function s(e,t){t===this._user.getSelectedObstacle()&&this.setObstacleBaseInfo(t)}function o(e,t){this._user.getSelectedRoutePoint()==e?this._mainPanel.mapPanel.putRoutePointToMapCenter(e):this._user.selectRoutePoint(e)}function a(e,t){e.getOwner().removeRoutePoint(e)}this.changeRoutePoint=function(e,t){this.updateRoutePointItem(t),this.updateRoutePointItem(e)},this.updateRoutePointItem=function(e){null!=e&&e.getOwner()==this._user.getSelectedSceneObject()&&(e.pointType!=ObjectPointType.MAIN_CAR_ROUTE_POINT&&e.pointType!=ObjectPointType.OBSTACLE_ROUTE_POINT||this.routePointList.changeItem(e.index,{routePoint:e}))},this.refreshPanel=function(){var e=this._user.isObstacleSelected();this.visible=e},this.setObstacleInfo=function(e){null!=e&&(this.setObstacleBaseInfo(e),this.setRoutePoints(e.route))},this.setObstacleBaseInfo=function(e){this.typeComboBox.selectedLabel=e.type,this.nameInput.text=e.name},this.changeObstacle=function(e,t){null!=t&&(t.unregisterEvent(ObstacleEvent.ROUTE_POINT_ADDED,this,n),t.unregisterEvent(ObstacleEvent.ROUTE_POINT_REMOVED,this,i),t.unregisterEvent(ObjectEvent.VALUE_CHANGED,this,s)),null!=e&&(e.registerEvent(ObstacleEvent.ROUTE_POINT_ADDED,this,n),e.registerEvent(ObstacleEvent.ROUTE_POINT_REMOVED,this,i),e.registerEvent(ObjectEvent.VALUE_CHANGED,this,s)),this.setObstacleInfo(e),this.refreshPanel()},this.refreshRoutePointList=function(){this.routePointList.refresh()},this.setRoutePoints=function(e){this.routePointList.array=[];for(var t=0;t<e.points.length;t++)this.addRoutePoint(e.points[t],t,!1);this.refreshRoutePointList()},this.addRoutePoint=function(e,t=!0){var n=e.index;t?this.routePointList.addItemAt({routePoint:e},n):this.routePointList.array.splice(n,0,{routePoint:e})},this.removeRoutePoint=function(e){this.routePointList.deleteItem(e.index)},ObstacleInfoPanelScript.super(this),DependencesHelper.setDependences(this,e),this._loadedDataManager.registerEvent(LoadedDataManagerEvent.MAP_DATA_LOADED,this,function(){UIHelper.setComboLabels(this.typeComboBox,this._loadedDataManager.mapData.getObstacleTypes())}),this.routePointList.renderHandler=new Handler(this,function(e,t){e.label="point"+t;var n=e.dataSource.routePoint,i=n===this._user.getSelectedRoutePoint(),s=e.getChildByName("selectedMark");null!=s&&(s.visible=i),e.on(Event.CLICK,this,o,[n]),e.on(Event.RIGHT_CLICK,this,a,[n])}),this.addRoutePointButton.on(Event.CLICK,this,function(e){var t=this._user.getSelectedObstacle(),n=null;if(0==t.getRoutePointCount()){var i=new Pose,s=this._loadedDataManager.mapData.uiToMapPosition(this._mainPanel.mapPanel.getViewCenter());i.vec3.x=s.x,i.vec3.y=s.y,n=t.createRoutePoint(this._loadedDataManager.mapData,i),t.addRoutePoint(n)}else{var o=this._user.getSelectedRoutePoint();if(null==o)n=t.getRoutePoint(t.getRoutePointCount()-1).clone(),t.addRoutePoint(n);else{var a=o.index;n=o.clone(),t.addRoutePoint(n,a+1)}}this._user.selectRoutePoint(n)}),this.typeComboBox.on(Event.CHANGE,this,function(e){var t=e.currentTarget;this._user.getSelectedObstacle().setType(t.selectedLabel)}),this.nameInput.on(Event.ENTER,this,t),this.nameInput.on(Event.BLUR,this,t),this._user.registerEvent(UserEvent.SCENE_OBJECT_SELECTED,this,function(e,t,n){this.changeObstacle(ObjectHelper.objectCheck(t,"sceneObjectType",SceneObjectType.OBSTACLE),ObjectHelper.objectCheck(n,"sceneObjectType",SceneObjectType.OBSTACLE))}),this._user.registerEvent(UserEvent.ROUTE_POINT_SELECTED,this,function(e,t,n){this.changeRoutePoint(ObjectHelper.objectCheck(t,"pointType",ObjectPointType.OBSTACLE_ROUTE_POINT),ObjectHelper.objectCheck(n,"pointType",ObjectPointType.OBSTACLE_ROUTE_POINT))}),this.changeObstacle(this._user.getSelectedObstacle(),null)}Laya.class(ObstacleInfoPanelScript,"ObstacleInfoPanelScript",ObstacleInfoPanelUI);